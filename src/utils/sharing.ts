/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π
 */

export interface ShareData {
  eventId: string;
  title: string;
  description?: string;
  imageUrl?: string;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
 */
export function generateEventShareUrl(eventId: string): string {
  const baseUrl = window.location.origin;
  return `${baseUrl}?event=${eventId}`;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è Telegram Web App —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Å–æ–±—ã—Ç–∏—è
 */
export function generateTelegramWebAppUrl(eventId: string): string {
  const botUsername = import.meta.env.VITE_TELEGRAM_BOT_USERNAME;
  
  // –ï—Å–ª–∏ –∏–º—è –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∏–ª–∏ —Ä–∞–≤–Ω–æ –ø—Ä–∏–º–µ—Ä—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é –≤–µ–±-—Å—Å—ã–ª–∫—É
  if (!botUsername || botUsername === 'your_bot' || botUsername === 'your_bot_username') {
    console.warn('VITE_TELEGRAM_BOT_USERNAME –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ã—á–Ω–∞—è –≤–µ–±-—Å—Å—ã–ª–∫–∞');
    return generateEventShareUrl(eventId);
  }
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Mini App —Å—Å—ã–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ t.me/BOT_USERNAME/APP_NAME?startapp=event_ID
  return `https://t.me/${botUsername}/My_Fiesta?startapp=event_${eventId}`;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é —Å—Å—ã–ª–∫—É —Å –æ–±—ã—á–Ω—ã–º–∏ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ fallback –µ—Å–ª–∏ startapp –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
 */
export function generateTelegramWebAppUrlWithParams(eventId: string): string {
  const botUsername = import.meta.env.VITE_TELEGRAM_BOT_USERNAME;
  
  if (!botUsername || botUsername === 'your_bot' || botUsername === 'your_bot_username') {
    return generateEventShareUrl(eventId);
  }
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–º–µ—Å—Ç–æ startapp
  return `https://t.me/${botUsername}?start=event_${eventId}`;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞
 */
export function generateSimpleTelegramUrl(eventId: string): string {
  const botUsername = import.meta.env.VITE_TELEGRAM_BOT_USERNAME;
  
  if (!botUsername || botUsername === 'your_bot' || botUsername === 'your_bot_username') {
    return generateEventShareUrl(eventId);
  }
  
  // –ü—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ event_
  return `https://t.me/${botUsername}?startapp=${eventId}`;
}

/**
 * –ö–æ–ø–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
 */
export async function copyToClipboard(text: string): Promise<boolean> {
  try {
    if (navigator.clipboard && window.isSecureContext) {
      await navigator.clipboard.writeText(text);
      return true;
    } else {
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      
      const result = document.execCommand('copy');
      document.body.removeChild(textArea);
      return result;
    }
  } catch (error) {
    console.error('Failed to copy to clipboard:', error);
    return false;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç ID —Å–æ–±—ã—Ç–∏—è –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 */
export function getEventIdFromUrl(): string | null {
  const urlParams = new URLSearchParams(window.location.search);
  return urlParams.get('event');
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç ID —Å–æ–±—ã—Ç–∏—è –∏–∑ Telegram Web App start parameter
 */
export function getEventIdFromTelegramStart(): string | null {
  try {
    // –í Telegram Web App start –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤
    if (typeof window !== 'undefined' && 'Telegram' in window) {
      const telegram = (window as any).Telegram?.WebApp;
      
      // –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ initDataUnsafe.start_param
      let startParam = telegram?.initDataUnsafe?.start_param;
      
      // –°–ø–æ—Å–æ–± 2: –ß–µ—Ä–µ–∑ initData —Å—Ç—Ä–æ–∫—É (–ø–∞—Ä—Å–∏–º –≤—Ä—É—á–Ω—É—é)
      if (!startParam && telegram?.initData) {
        try {
          const initDataParams = new URLSearchParams(telegram.initData);
          startParam = initDataParams.get('start_param');
        } catch (e) {
          console.warn('Failed to parse initData for start_param:', e);
        }
      }
      
      // –°–ø–æ—Å–æ–± 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (fallback)
      if (!startParam) {
        const urlParams = new URLSearchParams(window.location.search);
        startParam = urlParams.get('startapp') || urlParams.get('start_param') || urlParams.get('start');
      }
      
      // –°–ø–æ—Å–æ–± 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º hash –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      if (!startParam && window.location.hash) {
        try {
          const hashParams = new URLSearchParams(window.location.hash.substring(1));
          startParam = hashParams.get('startapp') || hashParams.get('start_param') || hashParams.get('start');
        } catch (e) {
          console.warn('Failed to parse hash for start_param:', e);
        }
      }
      
      console.log('üîç Telegram start param detection:', {
        fromInitDataUnsafe: telegram?.initDataUnsafe?.start_param,
        fromInitData: telegram?.initData ? 'present' : 'missing',
        fromUrl: new URLSearchParams(window.location.search).get('startapp'),
        fromHash: window.location.hash,
        finalStartParam: startParam
      });
      
      if (startParam) {
        let eventId = null;
        
        // –§–æ—Ä–º–∞—Ç 1: event_123 (—Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º)
        if (startParam.startsWith('event_')) {
          eventId = startParam.replace('event_', '');
        }
        // –§–æ—Ä–º–∞—Ç 2: evt123 (–∫–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–µ—Ñ–∏–∫—Å)
        else if (startParam.startsWith('evt')) {
          eventId = startParam.replace('evt', '');
        }
        // –§–æ—Ä–º–∞—Ç 3: –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ (–µ—Å–ª–∏ —ç—Ç–æ UUID –∏–ª–∏ –ø–æ—Ö–æ–∂–µ –Ω–∞ ID —Å–æ–±—ã—Ç–∏—è)
        else if (/^[a-f0-9-]{36}$/.test(startParam) || /^[a-zA-Z0-9_-]+$/.test(startParam)) {
          eventId = startParam;
        }
        
        if (eventId) {
          console.log('‚úÖ Event ID extracted from Telegram start param:', eventId, 'from:', startParam);
          return eventId;
        } else {
          console.warn('‚ö†Ô∏è Start param found but not recognized as event ID:', startParam);
        }
      }
    }
  } catch (error) {
    console.error('Failed to get start param from Telegram:', error);
  }
  
  return null;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
 */
export function generateShareText(eventData: ShareData): string {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Mini App —Å—Å—ã–ª–∫—É –¥–ª—è –±–æ–ª–µ–µ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—ã—Ç–∞
  const url = generateTelegramWebAppUrl(eventData.eventId);
  
  let text = `üéâ ${eventData.title}\n\n`;
  
  if (eventData.description) {
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —à–∞—Ä–∏–Ω–≥–∞
    const shortDescription = eventData.description.length > 100 
      ? eventData.description.substring(0, 100) + '...'
      : eventData.description;
    text += `${shortDescription}\n\n`;
  }
  
  text += `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è: ${url}`;
  
  return text;
}

/**
 * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞—Ç–∏–≤–Ω—ã–π —à–∞—Ä–∏–Ω–≥ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω) –∏–ª–∏ –∫–æ–ø–∏—Ä—É–µ—Ç –≤ –±—É—Ñ–µ—Ä
 */
export async function shareEvent(eventData: ShareData): Promise<{ success: boolean; method: 'native' | 'clipboard' | 'telegram' }> {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Mini App —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
  const shareUrl = generateTelegramWebAppUrl(eventData.eventId);
  const shareText = `üéâ ${eventData.title}\n\n${eventData.description ? eventData.description.substring(0, 100) + (eventData.description.length > 100 ? '...' : '') + '\n\n' : ''}–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è: ${shareUrl}`;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –Ω–∞—Ç–∏–≤–Ω—ã–π —à–∞—Ä–∏–Ω–≥ –≤ Telegram
  if (typeof window !== 'undefined' && 'Telegram' in window) {
    try {
      const telegram = (window as any).Telegram?.WebApp;
      if (telegram?.openLink) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram —à–∞—Ä–∏–Ω–≥ —Å Mini App —Å—Å—ã–ª–∫–æ–π
        const telegramShareUrl = `https://t.me/share/url?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(eventData.title)}`;
        telegram.openLink(telegramShareUrl);
        return { success: true, method: 'telegram' };
      }
    } catch (error) {
      console.error('Telegram sharing failed:', error);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º Web Share API
  if (navigator.share) {
    try {
      await navigator.share({
        title: eventData.title,
        text: eventData.description || '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é!',
        url: shareUrl
      });
      return { success: true, method: 'native' };
    } catch (error) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª —à–∞—Ä–∏–Ω–≥ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
      console.log('Native sharing cancelled or failed:', error);
    }
  }
  
  // Fallback - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
  const copied = await copyToClipboard(shareText);
  return { success: copied, method: 'clipboard' };
}

/**
 * –û—á–∏—â–∞–µ—Ç URL –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Å–æ–±—ã—Ç–∏—è (–ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏)
 */
export function clearEventParam(): void {
  if (typeof window !== 'undefined') {
    const url = new URL(window.location.href);
    url.searchParams.delete('event');
    window.history.replaceState({}, '', url.toString());
  }
} 